shiny::runApp('C:/Users/Administrator/OPAIRS/R-scripts/web')
shiny::runApp('C:/Users/Administrator/OPAIRS/R-scripts/web')
source(file = "C:/Users/Administrator/OPAIRS/R-scripts/dbConnect.R")
s1<- sapply("user",grepl,clsTree$keyterm)
s2<- sapply("graphic",grepl,clsTree$keyterm)
clsTree[s1&s2,c("keyterm")]
clsTree[s1&s2,c("keyterm","path")]
clsTree[s1&s2,c("keyterm","path","freq")]
clsTree[s1&s2,c("keyterm","path","freq")]
shiny::runApp('C:/Users/Administrator/OPAIRS/R-scripts/web')
clsTree$clean <- Trim(clean(str_replace_all(clsTree$keyterm, "[[:punct:]]", " ")))
source('C:/Users/Administrator/OPAIRS/R-scripts/COSINE-TFIDFICF.R')
head(clsTree)
clsTree$clean <- Trim(clean(str_replace_all(clsTree$keyterm, "[[:punct:]]", " ")))
head(clsTree)
out <- cSplit(clsTree, "clean","_", direction="long")
library(splitstackshape)
out <- cSplit(clsTree, "clean","_", direction="long")
head(out)
head(clsTree)
out <- cSplit(clsTree, "clean"," ", direction="long")
head(out)
ClassFreqDF<-aggregate(freq~path+clean,data=out,sum)
head(ClassFreqDF)
head(ClassFreqDF,10)
head(ClassFreqDF,20)
dim(ClassFreqDF)
source(file = "C:/Users/Administrator/OPAIRS/R-scripts/dbConnect.R")
out <- cSplit(clsTree, "clean","_", direction="long")
out <- cSplit(clsTree, "keyterm","_", direction="long")
head(out)
library(SnowballC)
out$keyterm<-wordStem(out$keyterm)
head(out)
ClassFreqDF<-aggregate(freq~path+keyterm,data=out,sum)
dim(ClassFreqDF)
head(ClassFreqDF)
head(ClassFreqDF,10)
head(ClassFreqDF,20)
head(ClassFreqDF,30)
head(ClassFreqDF,35)
head(ClassFreqDF,50)
out$keyterm<-wordStem(str_replace_all(out$keyterm,"[[:punct:]]", " "))
head(out)
ClassFreqDF<-aggregate(freq~path+keyterm,data=out,sum)
head(ClassFreqDF,50)
head(ClassFreqDF,70)
subdat<-out[out$keyterm!=" ",]
head(subdat)
any(out$keyterm==" ")
any(subdat$keyterm==" ")
ClassFreqDF<-aggregate(freq~path+keyterm,data=out,sum)
head(ClassFreqDF)
head(ClassFreqDF,30)
head(ClassFreqDF,31)
head(ClassFreqDF,34)
head(ClassFreqDF,35)
head(ClassFreqDF,100)
ClassFreqDF<-ClassFreqDF[ClassFreqDF$keyterm!=" "]
ClassFreqDF<-ClassFreqDF[ClassFreqDF$keyterm!=" ",]
head(ClassFreqDF,100)
ClassFreqDF<-ClassFreqDF[ClassFreqDF$keyterm!=" ",]
head(ClassFreqDF,100)
ClassFreqDF<-ClassFreqDF[ClassFreqDF$keyterm!="",]
head(ClassFreqDF,100)
ClassFreqDF<-aggregate(freq~path+keyterm,data=out,sum)
head(ClassFreqDF,100)
ClassFreqDF<-ClassFreqDF[ClassFreqDF$keyterm!="",]
head(ClassFreqDF,50)
ClassFreqDF<-ClassFreqDF[ClassFreqDF$keyterm!=" ",]
head(ClassFreqDF,50)
tail(ClassFreqDF)
ClassFreq<-dcast(ClassFreqDF,path~keyterm,value.var="freq",fill=0)
ClassFreq
ClassFreq[1:3,1:3]
rownames(ClassFreq)<-ClassFreq[,1]
ClassFreq <- ClassFreq[,-1]
# Build a Class Frequency Matrix
ClassFreqMatrix <- as.matrix(ClassFreq)
ClassFreqMatrix[1:3,1:3]
dim(out)
subset <- out[,c("id","path","keyterm")]
head(subset)
head(out)
subset <- out[,c("id","path","keyterm")]
head(subset)
a <- out[,c("id","path","keyterm")]
subset <- data.frame(id = out$id, path=out$path, keyterm=out$keyterm)]
subset <- data.frame(id = out$id, path=out$path, keyterm=out$keyterm)
subset
subdat<-out[out$keyterm!=" ",]
subdat<-subdat[subdat$keyterm!="",]
ClassFreqDF<-aggregate(freq~path+keyterm,data=out,sum)
head(ClassFreqDF)
ClassFreqDF<-aggregate(freq~path+keyterm,data=subdat,sum)
head(ClassFreqDF)
subdat2 <- data.frame(id = subdat$id, path=subdat$path, keyterm=subdat$keyterm)
head(subdat2)
subdat2 <- data.frame(path=subdat$path, keyterm=subdat$keyterm)
head(subdat2)
subdat2 <- data.frame(id = subdat$id, path=subdat$path, keyterm=subdat$keyterm)
head(subdat2)
subdat2$docCount <-1
subdat2.agg<-aggregate(docCount~id+keyterm,data = subdat2, sum)
head(subdat2.agg)
head(subdat2.agg,10)
subdat2.agg<-aggregate(docCount~id+path+keyterm,data = subdat2, sum)
head(subdat2.agg)
head(subdat2.agg,10)
head(subdat2,10)
length(subdat$keyterm)
unique(length(subdat$keyterm))
unique(length(subdat2$keyterm))
length(unique(subdat2$keyterm))
subdat2.agg<-aggregate(docCount~path+keyterm,data = subdat2, sum)
subdat2[subdat2$keyterm=="electrod"]
subdat2[subdat2$keyterm=="electrod",]
length(subdat2[subdat2$keyterm=="electrod",])
length(subdat2[subdat2$keyterm=="electrod",]$id)
length(unique(subdat2[subdat2$keyterm=="electrod",]$id))
subdat2.agg[subdat2.agg$keyterm=="electrod"]
subdat2.agg[subdat2.agg$keyterm=="electrod",]
subdat2.agg<-aggregate(docCount~id+path+keyterm,data = subdat2, sum)
subdat2.agg[subdat2.agg$keyterm=="electrod",]
length(unique(subdat2[subdat2$keyterm=="electrod",]$id))
length(subdat2.agg[subdat2.agg$keyterm=="electrod",]$id)
subdat2$docCount <-1
subdat2.agg<-aggregate(docCount~path+keyterm,data = subdat2, sum)
length(subdat2.agg[subdat2.agg$keyterm=="electrod",]$id)
dim(subdat2)
head(subdat2)
subdat2.agg<-aggregate(docCount~id+path+keyterm,data = subdat2, sum)
head(subdat2.agg)
head(subdat2.agg,10)
head(subdat2.agg,100)
subdat2 <- data.frame(id = subdat$id, path=subdat$path, keyterm=subdat$keyterm)
# For each keyterm, we find number of documents that has the term
# within each class
subdat2$docCount <-1
subdat2.agg<-aggregate(docCount~id+path+keyterm,data = subdat2, sum)
subdat2.agg$docCount <-1
subdat2.agg<-aggregate(docCount~path+keyterm,data = subdat2.agg, sum)
length(subdat2.agg[subdat2.agg$keyterm=="electrod",]$id)
length(subdat2.agg[subdat2.agg$keyterm=="electrod",]$docCount)
subdat2.agg[subdat2.agg$keyterm=="electrod",]
subdat2.dc <- dcast(subdat2.agg, path~keyterm,value.var = "docCount",fill=0)
rownames(subdat2.dc)<-subdat2.dc[,1]
head(subdat2.dc)
subdat2.dc<-subdat2.dc[,-1]
DocumentClassDF<- unique(subset[,c("id","path")])
DocumentClassDF<- unique(subdat2[,c("id","path")])
DocumentClassDF
ClassDocTabl<-table(DocumentClassDF$path)
ClassDocTabl
subdat2.dc$No.Docs <- as.numeric(ClassDocTabl)
TermClassMatrix <- as.matrix(subdat2.dc)
InvertedTermClassMatrix <- log(TermClassMatrix[,ncol(TermClassMatrix)]/TermClassMatrix)
# For term with 0 frequency, Division will cause Inf
InvertedTermClassMatrix[InvertedTermClassMatrix==Inf]<-0
InvertedClassMatrix <- log(nrow(ClassFreqMatrix)/colSums(ClassFreqMatrix>0))
# Inverted Class matrix is a vector of keywords with its
# classbonus value
re <- t(InvertedTermClassMatrix[,-ncol(InvertedTermClassMatrix)])*(InvertedClassMatrix)
final<-t(ClassFreqMatrix)*re
dim(final)
final[1:10,1:10]
final["health",1:10]
final["health",1:30]
final["health",1:30]
final["health"&"car",1:30]
final["care",1:30]
final["car",1:30]
final["care",1:30]
final["imag",1:30]
library(tm)
outDir <- "C:/Users/Administrator/OPAIRS/R-scripts/testclass/705  2/"
#testLabel<- tail(unlist(strsplit(outDir,as.factor("/"))),1)
testLabel<-"705  2"
docs <- VCorpus(DirSource(outDir,pattern = "\\.txt$"), readerControl = list(language ="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove punctuation except '-','_'
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeWords, stopwordnew)
docs <- tm_map(docs, stripWhitespace)
source(file = "C:/Users/Administrator/OPAIRS/R-scripts/helper.R")
docs <- tm_map(docs, removeWords, stopwordnew)
docs <- tm_map(docs, stripWhitespace)
dtm <- DocumentTermMatrix(docs)
tmp <- inspect(dtm)
replacePunctuation<-function(x){
gsub("[[::punct:]]+"," ",x)
}
docs <- VCorpus(DirSource(outDir,pattern = "\\.txt$"), readerControl = list(language ="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove punctuation except '-','_'
docs <- tm_map(docs, replacePunctuation)
replacePunctuation<-function(x){
gsub("[[:punct:]]+"," ",x)
}
docs <- tm_map(docs, replacePunctuation)
docs <- tm_map(docs, removeWords, stopwordnew)
docs <- tm_map(docs, stripWhitespace)
dtm <- DocumentTermMatrix(docs)
tmp <- inspect(dtm)
docs <- VCorpus(DirSource(outDir,pattern = "\\.txt$"), readerControl = list(language ="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove punctuation except '-','_'
docs <- tm_map(docs, replacePunctuation)
docs <- tm_map(docs, removeWords, stopwordnew)
docs <- tm_map(docs, stripWhitespace)
dtm <- DocumentTermMatrix(docs)
docs
inspect(docs)
docs <- tm_map(docs, stemDocument)
inspect(docs)
docs <- VCorpus(DirSource(outDir,pattern = "\\.txt$"), readerControl = list(language ="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove punctuation except '-','_'
docs <- tm_map(docs, replacePunctuation)
docs <- tm_map(docs, removeWords, stopwordnew)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, stemDocument)
docs
inspect(docs)
docs <- tm_map(docs, stemDocument, language="english")
docs
inspect(docs)
docs <- VCorpus(DirSource(outDir,pattern = "\\.txt$"), readerControl = list(language ="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove punctuation except '-','_'
docs <- tm_map(docs, replacePunctuation)
docs <- tm_map(docs, removeWords, stopwordnew)
docs <- tm_map(docs, stripWhitespace)
library(SnowballC)
docs <- tm_map(docs, stemDocument, language="english")
dtm <- DocumentTermMatrix(docs)
outDir <- "C:/Users/Administrator/OPAIRS/R-scripts/testclass/705  2/"
#testLabel<- tail(unlist(strsplit(outDir,as.factor("/"))),1)
docs <- VCorpus(DirSource(outDir,pattern = "\\.txt$"), readerControl = list(language ="en"))
testLabel<-"705  2"
docs <- tm_map(docs, PlainTextDocumen)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, PlainTextDocument)
docs <- tm_map(docs, removeNumbers)
# Remove punctuation except '-','_'
docs <- tm_map(docs, replacePunctuation)
docs <- tm_map(docs, removeWords, stopwordnew)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, stemDocument, language="english")
dtm <- DocumentTermMatrix(docs)
